{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","key","$","elm$core$Dict$toList","_Utils_cmp","ord","_Utils_update","oldRecord","updatedFields","newRecord","_List_Nil","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","_List_map2","xs","ys","_Basics_add","_Basics_modBy","modulus","answer","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_Scheduler_succeed","value","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","g","h","_Scheduler_enqueue","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Json_decodePrim","decoder","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","String","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","field","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","index","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","decoders","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","msg","j","_VirtualDom_divertHrefToApp","_Platform_sendToApp","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","n","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","stopPropagation","Y","currentEventNode","W","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aM","aV","aT","initialModel","view","aX","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","millisToPosix","author$project$Main$NewSpread","author$project$Main$RandomSpread","canvas","horizontalBorders","verticalBorders","blocks","elm$core$List$cons","elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","elm$core$Basics$add","elm$core$List$foldl","elm$core$List$foldrHelper","fn","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$random$Random$addOne","elm$core$Basics$abs","elm$random$Random$Seed","elm$random$Random$next","_n0","incr","elm$random$Random$peel","word","elm$random$Random$float","seed0","seed1","range","n1","elm$random$Random$getByWeight","others","countdown","weight","second","otherOthers","elm$random$Random$map","genA","_n1","elm$random$Random$weighted","first","normalize","total","author$project$Main$randomPrimaryColor","valueList","elm$random$Random$int","lo","threshhold","seed","seedN","accountForBias","author$project$Main$zeroTo","elm$random$Random$andThen","newSeed","genB","elm$random$Random$listHelp","revList","gen","elm$random$Random$list","elm$random$Random$map4","_n2","_n3","genC","genD","_n4","_n5","_n6","_n7","seed4","elm$random$Random$map2","seed2","elm$random$Random$pair","elm$core$Basics$apL","author$project$Main$randomCanvas","author$project$Main$randomRow","author$project$Main$randomInt","elm$core$Basics$max","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$Maybe$withDefault","_default","maybe","elm$core$Task$andThen","elm$core$Task$succeed","elm$time$Time$now","Date","now","elm$random$Random$init","time","elm$random$Random$initialSeed","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fromIndex","tail","leaf","tailLen","elm$core$List$length","elm$core$List$map2","elm$core$List$rangeHelp","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","elm$core$List$indexedMap","elm$core$Platform$sendToApp","elm$random$Random$step","elm$random$Random$onEffects","commands","rest","colors","elm$random$Random$command","elm$random$Random$generate","generator","author$project$Main$newSpread","toBlock","xy","af","az","_Utils_Tuple3","halfRange","fullRange","author$project$Main$init","author$project$Main$NewCanvas","author$project$Main$newCanvas","elm$core$Basics$min","elm$core$Platform$Cmd$none","author$project$Main$update","newH","newW","smaller","author$project$Canvas$indexed","elm$core$Basics$always","elm$core$Basics$composeR","elm$core$List$any","isOkay","elm$core$List$member","author$project$Canvas$withHorizontalBorders","rows","co","author$project$Canvas$withVerticalBorders","columns","author$project$Main$ChangeHeight","author$project$Main$ChangeWidth","author$project$Main$Scramble","author$project$Main$SetSquare","author$project$Color$colorToString","elm$core$Basics$modBy","elm$core$List$drop","drop","elm$json$Json$Decode$succeed","elm$html$Html$button","elm$html$Html$text","elm$json$Json$Encode$string","elm$html$Html$Attributes$class","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$style","author$project$Main$makeAdjustors","bg","root","curr","_Utils_ap","elm$core$List$append","elm$core$List$concatMap","author$project$Canvas$getNeighbors","width","x2","y2","author$project$Canvas$withBlock","ca","coor","col","color","author$project$Main$makeBlocks","elm$html$Html$div","author$project$Main$makeRow","elm$html$Html$h1","elm$json$Json$Encode$bool","elm$html$Html$Attributes$disabled","bool","elm$html$Html$Attributes$boolProperty","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","elm$core$Task$init","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Task$spawnCmd","_Scheduler_spawn","tasks","exports","elm$browser$Browser$element","elm$core$Platform$Sub$none","Main","author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bde40498.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.X.H === region.ab.H)\n\t{\n\t\treturn 'on line ' + region.X.H;\n\t}\n\treturn 'on lines ' + region.X.H + ' through ' + region.ab.H;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aM,\n\t\timpl.aV,\n\t\timpl.aT,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tq: func(record.q),\n\t\tY: record.Y,\n\t\tW: record.W\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.q;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.Y;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.W) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aM,\n\t\timpl.aV,\n\t\timpl.aT,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.aX;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aM,\n\t\timpl.aV,\n\t\timpl.aT,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.K && impl.K(sendToApp)\n\t\t\tvar view = impl.aX;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aD);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.aU) && (_VirtualDom_doc.title = title = doc.aU);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aP;\n\tvar onUrlRequest = impl.aQ;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tK: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aq === next.aq\n\t\t\t\t\t\t\t&& curr.ag === next.ag\n\t\t\t\t\t\t\t&& curr.an.a === next.an.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taM: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aM, flags, _Browser_getUrl(), key);\n\t\t},\n\t\taX: impl.aX,\n\t\taV: impl.aV,\n\t\taT: impl.aT\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aK: 'hidden', aE: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aK: 'mozHidden', aE: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aK: 'msHidden', aE: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aK: 'webkitHidden', aE: 'webkitvisibilitychange' }\n\t\t: { aK: 'hidden', aE: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tav: _Browser_getScene(),\n\t\tay: {\n\t\t\tS: _Browser_window.pageXOffset,\n\t\t\tT: _Browser_window.pageYOffset,\n\t\t\taz: _Browser_doc.documentElement.clientWidth,\n\t\t\taf: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\taz: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\taf: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tav: {\n\t\t\t\taz: node.scrollWidth,\n\t\t\t\taf: node.scrollHeight\n\t\t\t},\n\t\t\tay: {\n\t\t\t\tS: node.scrollLeft,\n\t\t\t\tT: node.scrollTop,\n\t\t\t\taz: node.clientWidth,\n\t\t\t\taf: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tav: _Browser_getScene(),\n\t\t\tay: {\n\t\t\t\tS: x,\n\t\t\t\tT: y,\n\t\t\t\taz: _Browser_doc.documentElement.clientWidth,\n\t\t\t\taf: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taF: {\n\t\t\t\tS: x + rect.left,\n\t\t\t\tT: y + rect.top,\n\t\t\t\taz: rect.width,\n\t\t\t\taf: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Main$initDimension = 40;\nvar author$project$Main$NewSpread = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Main$RandomSpread = F4(\n\tfunction (canvas, horizontalBorders, verticalBorders, blocks) {\n\t\treturn {y: blocks, t: canvas, A: horizontalBorders, F: verticalBorders};\n\t});\nvar author$project$Color$Blue = 0;\nvar author$project$Color$Red = 1;\nvar author$project$Color$Yellow = 2;\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$random$Random$addOne = function (value) {\n\treturn _Utils_Tuple2(1, value);\n};\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar elm$core$List$sum = function (numbers) {\n\treturn A3(elm$core$List$foldl, elm$core$Basics$add, 0, numbers);\n};\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$random$Random$Generator = elm$core$Basics$identity;\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$random$Random$next = function (_n0) {\n\tvar state0 = _n0.a;\n\tvar incr = _n0.b;\n\treturn A2(elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar elm$random$Random$peel = function (_n0) {\n\tvar state = _n0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = elm$random$Random$next(seed0);\n\t\t\tvar range = elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = elm$random$Random$peel(seed1);\n\t\t\tvar n0 = elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 1.34217728e8) + lo) / 9.007199254740992e15;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\telm$random$Random$next(seed1));\n\t\t};\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$random$Random$getByWeight = F3(\n\tfunction (_n0, others, countdown) {\n\t\tgetByWeight:\n\t\twhile (true) {\n\t\t\tvar weight = _n0.a;\n\t\t\tvar value = _n0.b;\n\t\t\tif (!others.b) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\tvar second = others.a;\n\t\t\t\tvar otherOthers = others.b;\n\t\t\t\tif (_Utils_cmp(\n\t\t\t\t\tcountdown,\n\t\t\t\t\telm$core$Basics$abs(weight)) < 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$_n0 = second,\n\t\t\t\t\t\t$temp$others = otherOthers,\n\t\t\t\t\t\t$temp$countdown = countdown - elm$core$Basics$abs(weight);\n\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\tothers = $temp$others;\n\t\t\t\t\tcountdown = $temp$countdown;\n\t\t\t\t\tcontinue getByWeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$random$Random$map = F2(\n\tfunction (func, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed0) {\n\t\t\tvar _n1 = genA(seed0);\n\t\t\tvar a = _n1.a;\n\t\t\tvar seed1 = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar elm$random$Random$weighted = F2(\n\tfunction (first, others) {\n\t\tvar normalize = function (_n0) {\n\t\t\tvar weight = _n0.a;\n\t\t\treturn elm$core$Basics$abs(weight);\n\t\t};\n\t\tvar total = normalize(first) + elm$core$List$sum(\n\t\t\tA2(elm$core$List$map, normalize, others));\n\t\treturn A2(\n\t\t\telm$random$Random$map,\n\t\t\tA2(elm$random$Random$getByWeight, first, others),\n\t\t\tA2(elm$random$Random$float, 0, total));\n\t});\nvar elm$random$Random$uniform = F2(\n\tfunction (value, valueList) {\n\t\treturn A2(\n\t\t\telm$random$Random$weighted,\n\t\t\telm$random$Random$addOne(value),\n\t\t\tA2(elm$core$List$map, elm$random$Random$addOne, valueList));\n\t});\nvar author$project$Main$randomPrimaryColor = A2(\n\telm$random$Random$uniform,\n\t0,\n\t_List_fromArray(\n\t\t[1, 2]));\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _n0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _n0.a;\n\t\t\tvar hi = _n0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\telm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar author$project$Main$zeroTo = function (max) {\n\treturn A2(elm$random$Random$int, 0, max);\n};\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$random$Random$andThen = F2(\n\tfunction (callback, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed) {\n\t\t\tvar _n1 = genA(seed);\n\t\t\tvar result = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\tvar _n2 = callback(result);\n\t\t\tvar genB = _n2;\n\t\t\treturn genB(newSeed);\n\t\t};\n\t});\nvar elm$random$Random$listHelp = F4(\n\tfunction (revList, n, gen, seed) {\n\t\tlistHelp:\n\t\twhile (true) {\n\t\t\tif (n < 1) {\n\t\t\t\treturn _Utils_Tuple2(revList, seed);\n\t\t\t} else {\n\t\t\t\tvar _n0 = gen(seed);\n\t\t\t\tvar value = _n0.a;\n\t\t\t\tvar newSeed = _n0.b;\n\t\t\t\tvar $temp$revList = A2(elm$core$List$cons, value, revList),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$gen = gen,\n\t\t\t\t\t$temp$seed = newSeed;\n\t\t\t\trevList = $temp$revList;\n\t\t\t\tn = $temp$n;\n\t\t\t\tgen = $temp$gen;\n\t\t\t\tseed = $temp$seed;\n\t\t\t\tcontinue listHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$random$Random$list = F2(\n\tfunction (n, _n0) {\n\t\tvar gen = _n0;\n\t\treturn function (seed) {\n\t\t\treturn A4(elm$random$Random$listHelp, _List_Nil, n, gen, seed);\n\t\t};\n\t});\nvar elm$random$Random$map4 = F5(\n\tfunction (func, _n0, _n1, _n2, _n3) {\n\t\tvar genA = _n0;\n\t\tvar genB = _n1;\n\t\tvar genC = _n2;\n\t\tvar genD = _n3;\n\t\treturn function (seed0) {\n\t\t\tvar _n4 = genA(seed0);\n\t\t\tvar a = _n4.a;\n\t\t\tvar seed1 = _n4.b;\n\t\t\tvar _n5 = genB(seed1);\n\t\t\tvar b = _n5.a;\n\t\t\tvar seed2 = _n5.b;\n\t\t\tvar _n6 = genC(seed2);\n\t\t\tvar c = _n6.a;\n\t\t\tvar seed3 = _n6.b;\n\t\t\tvar _n7 = genD(seed3);\n\t\t\tvar d = _n7.a;\n\t\t\tvar seed4 = _n7.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA4(func, a, b, c, d),\n\t\t\t\tseed4);\n\t\t};\n\t});\nvar elm$random$Random$map2 = F3(\n\tfunction (func, _n0, _n1) {\n\t\tvar genA = _n0;\n\t\tvar genB = _n1;\n\t\treturn function (seed0) {\n\t\t\tvar _n2 = genA(seed0);\n\t\t\tvar a = _n2.a;\n\t\t\tvar seed1 = _n2.b;\n\t\t\tvar _n3 = genB(seed1);\n\t\t\tvar b = _n3.a;\n\t\t\tvar seed2 = _n3.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2(func, a, b),\n\t\t\t\tseed2);\n\t\t};\n\t});\nvar elm$random$Random$pair = F2(\n\tfunction (genA, genB) {\n\t\treturn A3(\n\t\t\telm$random$Random$map2,\n\t\t\tF2(\n\t\t\t\tfunction (a, b) {\n\t\t\t\t\treturn _Utils_Tuple2(a, b);\n\t\t\t\t}),\n\t\t\tgenA,\n\t\t\tgenB);\n\t});\nvar author$project$Main$randomBlocks = function (d) {\n\tvar toBlock = F4(\n\t\tfunction (xy, w, h, c) {\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\txy,\n\t\t\t\t{af: h, az: w},\n\t\t\t\tc);\n\t\t});\n\tvar halfRange = author$project$Main$zeroTo((d / 2) | 0);\n\tvar fullRange = author$project$Main$zeroTo(d);\n\treturn A2(\n\t\telm$random$Random$andThen,\n\t\tfunction (len) {\n\t\t\treturn A2(\n\t\t\t\telm$random$Random$list,\n\t\t\t\tlen,\n\t\t\t\tA5(\n\t\t\t\t\telm$random$Random$map4,\n\t\t\t\t\ttoBlock,\n\t\t\t\t\tA2(elm$random$Random$pair, fullRange, fullRange),\n\t\t\t\t\thalfRange,\n\t\t\t\t\thalfRange,\n\t\t\t\t\tauthor$project$Main$randomPrimaryColor));\n\t\t},\n\t\tA2(elm$random$Random$int, 1, 10));\n};\nvar author$project$Color$Black = 3;\nvar author$project$Color$White = 4;\nvar author$project$Main$randomRow = function (w) {\n\treturn A2(\n\t\telm$random$Random$list,\n\t\tw,\n\t\tA2(\n\t\t\telm$random$Random$weighted,\n\t\t\t_Utils_Tuple2(40, 4),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(1, 3),\n\t\t\t\t\t_Utils_Tuple2(10, 1),\n\t\t\t\t\t_Utils_Tuple2(10, 2),\n\t\t\t\t\t_Utils_Tuple2(10, 0)\n\t\t\t\t])));\n};\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar author$project$Main$randomCanvas = F2(\n\tfunction (h, w) {\n\t\treturn A2(\n\t\t\telm$random$Random$list,\n\t\t\th,\n\t\t\tauthor$project$Main$randomRow(w));\n\t});\nvar author$project$Main$randomInt = function (d) {\n\treturn A2(\n\t\telm$random$Random$andThen,\n\t\tfunction (len) {\n\t\t\treturn A2(\n\t\t\t\telm$random$Random$list,\n\t\t\t\tlen,\n\t\t\t\tauthor$project$Main$zeroTo(d));\n\t\t},\n\t\tA2(elm$random$Random$int, 1, 5));\n};\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$List$maximum = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(\n\t\t\tA3(elm$core$List$foldl, elm$core$Basics$max, x, xs));\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$random$Random$Generate = elm$core$Basics$identity;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$random$Random$initialSeed = function (x) {\n\tvar _n0 = elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _n0.a;\n\tvar incr = _n0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, state2, incr));\n};\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar elm$random$Random$init = A2(\n\telm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn elm$core$Task$succeed(\n\t\t\telm$random$Random$initialSeed(\n\t\t\t\telm$time$Time$posixToMillis(time)));\n\t},\n\telm$time$Time$now);\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$random$Random$step = F2(\n\tfunction (_n0, seed) {\n\t\tvar generator = _n0;\n\t\treturn generator(seed);\n\t});\nvar elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _n1 = A2(elm$random$Random$step, generator, seed);\n\t\t\tvar value = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar elm$random$Random$onSelfMsg = F3(\n\tfunction (_n0, _n1, seed) {\n\t\treturn elm$core$Task$succeed(seed);\n\t});\nvar elm$random$Random$cmdMap = F2(\n\tfunction (func, _n0) {\n\t\tvar generator = _n0;\n\t\treturn A2(elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager(elm$random$Random$init, elm$random$Random$onEffects, elm$random$Random$onSelfMsg, elm$random$Random$cmdMap);\nvar elm$random$Random$command = _Platform_leaf('Random');\nvar elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn elm$random$Random$command(\n\t\t\tA2(elm$random$Random$map, tagger, generator));\n\t});\nvar author$project$Main$newSpread = F2(\n\tfunction (w, h) {\n\t\treturn A2(\n\t\t\telm$random$Random$generate,\n\t\t\tauthor$project$Main$NewSpread,\n\t\t\tA5(\n\t\t\t\telm$random$Random$map4,\n\t\t\t\tauthor$project$Main$RandomSpread,\n\t\t\t\tA2(author$project$Main$randomCanvas, w, h),\n\t\t\t\tauthor$project$Main$randomInt(h),\n\t\t\t\tauthor$project$Main$randomInt(w),\n\t\t\t\tauthor$project$Main$randomBlocks(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\telm$core$List$maximum(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[w, h]))))));\n\t});\nvar author$project$Main$init = _Utils_Tuple2(\n\t{y: _List_Nil, t: _List_Nil, af: author$project$Main$initDimension, A: _List_Nil, F: _List_Nil, az: author$project$Main$initDimension},\n\tA2(author$project$Main$newSpread, author$project$Main$initDimension, author$project$Main$initDimension));\nvar author$project$Main$NewCanvas = function (a) {\n\treturn {$: 2, a: a};\n};\nvar author$project$Main$newCanvas = F2(\n\tfunction (h, w) {\n\t\treturn A2(\n\t\t\telm$random$Random$generate,\n\t\t\tauthor$project$Main$NewCanvas,\n\t\t\tA2(author$project$Main$randomCanvas, h, w));\n\t});\nvar elm$core$Basics$min = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) < 0) ? x : y;\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 1:\n\t\t\t\tvar canvas = msg.a.t;\n\t\t\t\tvar horizontalBorders = msg.a.A;\n\t\t\t\tvar verticalBorders = msg.a.F;\n\t\t\t\tvar blocks = msg.a.y;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{y: blocks, t: canvas, A: horizontalBorders, F: verticalBorders}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 2:\n\t\t\t\tvar canvas = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{t: canvas}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 3:\n\t\t\t\tvar h = msg.a;\n\t\t\t\tvar newH = A2(elm$core$Basics$max, 10, model.af + h);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{af: newH}),\n\t\t\t\t\tA2(author$project$Main$newCanvas, newH, model.az));\n\t\t\tcase 4:\n\t\t\t\tvar w = msg.a;\n\t\t\t\tvar newW = A2(elm$core$Basics$max, 10, model.az + w);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{az: newW}),\n\t\t\t\t\tA2(author$project$Main$newCanvas, model.af, newW));\n\t\t\tcase 5:\n\t\t\t\tvar smaller = A2(elm$core$Basics$min, model.az, model.af);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{af: smaller, az: smaller}),\n\t\t\t\t\tA2(author$project$Main$newSpread, smaller, smaller));\n\t\t\tcase 6:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(author$project$Main$newSpread, model.az, model.af));\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar elm$core$Tuple$pair = F2(\n\tfunction (a, b) {\n\t\treturn _Utils_Tuple2(a, b);\n\t});\nvar author$project$Canvas$indexed = elm$core$List$indexedMap(elm$core$Tuple$pair);\nvar elm$core$Basics$always = F2(\n\tfunction (a, _n0) {\n\t\treturn a;\n\t});\nvar elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _Utils_eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar author$project$Canvas$withHorizontalBorders = F2(\n\tfunction (rows, co) {\n\t\treturn A2(\n\t\t\telm$core$Basics$composeR,\n\t\t\tauthor$project$Canvas$indexed,\n\t\t\telm$core$List$map(\n\t\t\t\tfunction (_n0) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar r = _n0.b;\n\t\t\t\t\treturn A2(elm$core$List$member, i, rows) ? A2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\telm$core$Basics$always(co),\n\t\t\t\t\t\tr) : r;\n\t\t\t\t}));\n\t});\nvar author$project$Canvas$withVerticalBorders = F2(\n\tfunction (columns, co) {\n\t\treturn elm$core$List$map(\n\t\t\tA2(\n\t\t\t\telm$core$Basics$composeR,\n\t\t\t\tauthor$project$Canvas$indexed,\n\t\t\t\telm$core$List$map(\n\t\t\t\t\tfunction (_n0) {\n\t\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\t\tvar c = _n0.b;\n\t\t\t\t\t\treturn A2(elm$core$List$member, i, columns) ? co : c;\n\t\t\t\t\t})));\n\t});\nvar author$project$Main$ChangeHeight = function (a) {\n\treturn {$: 3, a: a};\n};\nvar author$project$Main$ChangeWidth = function (a) {\n\treturn {$: 4, a: a};\n};\nvar author$project$Main$Scramble = {$: 6};\nvar author$project$Main$SetSquare = {$: 5};\nvar author$project$Color$colorToString = function (c) {\n\tswitch (c) {\n\t\tcase 0:\n\t\t\treturn '#3963BA';\n\t\tcase 1:\n\t\t\treturn '#B41907';\n\t\tcase 2:\n\t\t\treturn '#EDB023';\n\t\tcase 3:\n\t\t\treturn '#000000';\n\t\tdefault:\n\t\t\treturn '#ffffff';\n\t}\n};\nvar elm$core$Basics$modBy = _Basics_modBy;\nvar elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar author$project$Main$makeAdjustors = function () {\n\tvar colors = _List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2(0, 4),\n\t\t\t_Utils_Tuple2(1, 4),\n\t\t\t_Utils_Tuple2(2, 3)\n\t\t]);\n\treturn A2(\n\t\telm$core$Basics$composeR,\n\t\tauthor$project$Canvas$indexed,\n\t\telm$core$List$map(\n\t\t\tfunction (_n0) {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\tvar data = _n0.b;\n\t\t\t\tif ((!data.a.b) && (!data.b.b)) {\n\t\t\t\t\treturn elm$html$Html$text('');\n\t\t\t\t} else {\n\t\t\t\t\tvar attrs = data.a;\n\t\t\t\t\tvar v = data.b;\n\t\t\t\t\tvar _n2 = A2(\n\t\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t\t_Utils_Tuple2(4, 3),\n\t\t\t\t\t\telm$core$List$head(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$core$List$drop,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$Basics$modBy,\n\t\t\t\t\t\t\t\t\telm$core$List$length(colors),\n\t\t\t\t\t\t\t\t\ti),\n\t\t\t\t\t\t\t\tcolors)));\n\t\t\t\t\tvar bg = _n2.a;\n\t\t\t\t\tvar color = _n2.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\tattrs,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'color',\n\t\t\t\t\t\t\t\t\tauthor$project$Color$colorToString(color)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'background-color',\n\t\t\t\t\t\t\t\t\tauthor$project$Color$colorToString(bg)),\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('Adjustors__adjustor')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tv);\n\t\t\t\t}\n\t\t\t}));\n}();\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn elm$core$List$concat(\n\t\t\tA2(elm$core$List$map, f, list));\n\t});\nvar author$project$Canvas$getNeighbors = F2(\n\tfunction (_n0, _n1) {\n\t\tvar height = _n0.af;\n\t\tvar width = _n0.az;\n\t\tvar x = _n1.a;\n\t\tvar y = _n1.b;\n\t\tvar ys = A2(elm$core$List$range, y, (y + height) - 1);\n\t\tvar xs = A2(elm$core$List$range, x, (x + width) - 1);\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tfunction (x2) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tfunction (y2) {\n\t\t\t\t\t\treturn _Utils_Tuple2(x2, y2);\n\t\t\t\t\t},\n\t\t\t\t\tys);\n\t\t\t},\n\t\t\txs);\n\t});\nvar author$project$Canvas$withBlock = F2(\n\tfunction (_n0, ca) {\n\t\tvar coor = _n0.a;\n\t\tvar d = _n0.b;\n\t\tvar col = _n0.c;\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (_n1) {\n\t\t\t\tvar i = _n1.a;\n\t\t\t\tvar row = _n1.b;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tfunction (_n2) {\n\t\t\t\t\t\tvar j = _n2.a;\n\t\t\t\t\t\tvar color = _n2.b;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$core$List$member,\n\t\t\t\t\t\t\t_Utils_Tuple2(i, j),\n\t\t\t\t\t\t\tA2(author$project$Canvas$getNeighbors, d, coor)) ? col : color;\n\t\t\t\t\t},\n\t\t\t\t\tauthor$project$Canvas$indexed(row));\n\t\t\t},\n\t\t\tauthor$project$Canvas$indexed(ca));\n\t});\nvar author$project$Main$makeBlocks = F2(\n\tfunction (bs, c) {\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\telm$core$Basics$apL,\n\t\t\tc,\n\t\t\tA2(elm$core$List$map, author$project$Canvas$withBlock, bs));\n\t});\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar author$project$Main$makeCell = function (c) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('Cell'),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t'background-color',\n\t\t\t\tauthor$project$Color$colorToString(c))\n\t\t\t]),\n\t\t_List_Nil);\n};\nvar author$project$Main$makeRow = A2(\n\telm$core$Basics$composeR,\n\telm$core$List$map(author$project$Main$makeCell),\n\telm$html$Html$div(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('Row')\n\t\t\t])));\nvar elm$html$Html$h1 = _VirtualDom_node('h1');\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar elm$html$Html$Attributes$boolProperty = F2(\n\tfunction (key, bool) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$bool(bool));\n\t});\nvar elm$html$Html$Attributes$disabled = elm$html$Html$Attributes$boolProperty('disabled');\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$Main$view = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('Main')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('MondriElm!')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('Adjustors')\n\t\t\t\t\t]),\n\t\t\t\tauthor$project$Main$makeAdjustors(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$Scramble)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Scramble')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t\t\tauthor$project$Main$ChangeHeight(5))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Height +')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t\t\tauthor$project$Main$ChangeHeight(-5)),\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$disabled(model.af <= 10)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Height -')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t\t\tauthor$project$Main$ChangeWidth(5))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Width +')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t\t\tauthor$project$Main$ChangeWidth(-5)),\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$disabled(model.az <= 10)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Width -')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$SetSquare),\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$disabled(\n\t\t\t\t\t\t\t\t\t_Utils_eq(model.az, model.af))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Make Square')\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]))),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('Frame__outer')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('Frame')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\t\tauthor$project$Main$makeRow,\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\tauthor$project$Canvas$withVerticalBorders,\n\t\t\t\t\t\t\t\tmodel.F,\n\t\t\t\t\t\t\t\t3,\n\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\tauthor$project$Canvas$withHorizontalBorders,\n\t\t\t\t\t\t\t\t\tmodel.A,\n\t\t\t\t\t\t\t\t\t3,\n\t\t\t\t\t\t\t\t\tA2(author$project$Main$makeBlocks, model.y, model.t)))))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {ad: fragment, ag: host, al: path, an: port_, aq: protocol, ar: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\taM: function (_n0) {\n\t\t\treturn author$project$Main$init;\n\t\t},\n\t\taT: elm$core$Basics$always(elm$core$Platform$Sub$none),\n\t\taV: author$project$Main$update,\n\t\taX: author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}